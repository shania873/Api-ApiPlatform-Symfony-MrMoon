{
  "openapi": "3.0.0",
  "info": {
    "title": "Api Mrs Moon",
    "description": "",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "/",
      "description": ""
    }
  ],
  "paths": {
    "/api/diseases": {
      "get": {
        "operationId": "api_diseases_get_collection",
        "tags": ["Diseases"],
        "responses": {
          "200": {
            "description": "Diseases collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Diseases.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Diseases"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Diseases"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Diseases resources.",
        "description": "Retrieves the collection of Diseases resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_diseases_post",
        "tags": ["Diseases"],
        "responses": {
          "201": {
            "description": "Diseases resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Diseases resource.",
        "description": "Creates a Diseases resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Diseases resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Diseases.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Diseases"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Diseases"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/diseases/{id}": {
      "get": {
        "operationId": "api_diseases_id_get",
        "tags": ["Diseases"],
        "responses": {
          "200": {
            "description": "Diseases resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Diseases resource.",
        "description": "Retrieves a Diseases resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Diseases identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_diseases_id_put",
        "tags": ["Diseases"],
        "responses": {
          "200": {
            "description": "Diseases resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Diseases resource.",
        "description": "Replaces the Diseases resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Diseases identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Diseases resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Diseases.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Diseases"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Diseases"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_diseases_id_delete",
        "tags": ["Diseases"],
        "responses": {
          "204": {
            "description": "Diseases resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Diseases resource.",
        "description": "Removes the Diseases resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Diseases identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_diseases_id_patch",
        "tags": ["Diseases"],
        "responses": {
          "200": {
            "description": "Diseases resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Diseases"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Diseases resource.",
        "description": "Updates the Diseases resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Diseases identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Diseases resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Diseases"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/login": {
      "post": {
        "operationId": "login_check_post",
        "tags": ["Login Check"],
        "responses": {
          "200": {
            "description": "User token created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "readOnly": true,
                      "type": "string",
                      "nullable": false
                    }
                  },
                  "required": ["token"]
                }
              }
            }
          }
        },
        "summary": "Creates a user token.",
        "description": "Creates a user token.",
        "requestBody": {
          "description": "The login data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "nullable": false
                  },
                  "password": {
                    "type": "string",
                    "nullable": false
                  }
                },
                "required": ["username", "password"]
              }
            }
          },
          "required": true
        }
      },
      "parameters": []
    },
    "/api/medias": {
      "get": {
        "operationId": "api_medias_get_collection",
        "tags": ["Medias"],
        "responses": {
          "200": {
            "description": "Medias collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Medias.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Medias"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Medias"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Medias resources.",
        "description": "Retrieves the collection of Medias resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_medias_post",
        "tags": ["Medias"],
        "responses": {
          "201": {
            "description": "Medias resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Medias.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medias"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Medias"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Medias resource.",
        "description": "Creates a Medias resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Medias resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Medias.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Medias"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Medias"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/medias/{id}": {
      "get": {
        "operationId": "api_medias_id_get",
        "tags": ["Medias"],
        "responses": {
          "200": {
            "description": "Medias resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Medias.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medias"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Medias"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Medias resource.",
        "description": "Retrieves a Medias resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Medias identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_medias_id_put",
        "tags": ["Medias"],
        "responses": {
          "200": {
            "description": "Medias resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Medias.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medias"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Medias"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Medias resource.",
        "description": "Replaces the Medias resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Medias identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Medias resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Medias.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Medias"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Medias"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_medias_id_delete",
        "tags": ["Medias"],
        "responses": {
          "204": {
            "description": "Medias resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Medias resource.",
        "description": "Removes the Medias resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Medias identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_medias_id_patch",
        "tags": ["Medias"],
        "responses": {
          "200": {
            "description": "Medias resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Medias.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medias"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Medias"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Medias resource.",
        "description": "Updates the Medias resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Medias identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Medias resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Medias"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/movies": {
      "get": {
        "operationId": "api_movies_get_collection",
        "tags": ["Movies"],
        "responses": {
          "200": {
            "description": "Movies collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Movies.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movies"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movies"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Movies resources.",
        "description": "Retrieves the collection of Movies resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_movies_post",
        "tags": ["Movies"],
        "responses": {
          "201": {
            "description": "Movies resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Movies resource.",
        "description": "Creates a Movies resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Movies resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Movies.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/movies/{id}": {
      "get": {
        "operationId": "api_movies_id_get",
        "tags": ["Movies"],
        "responses": {
          "200": {
            "description": "Movies resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Movies resource.",
        "description": "Retrieves a Movies resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Movies identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_movies_id_put",
        "tags": ["Movies"],
        "responses": {
          "200": {
            "description": "Movies resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Movies resource.",
        "description": "Replaces the Movies resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Movies identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Movies resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Movies.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_movies_id_delete",
        "tags": ["Movies"],
        "responses": {
          "204": {
            "description": "Movies resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Movies resource.",
        "description": "Removes the Movies resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Movies identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_movies_id_patch",
        "tags": ["Movies"],
        "responses": {
          "200": {
            "description": "Movies resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Movies resource.",
        "description": "Updates the Movies resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Movies identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Movies resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/rabbit": {
      "post": {
        "operationId": "post",
        "tags": ["User"],
        "responses": {
          "201": {
            "description": "User resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Random rabbit picture",
        "description": "# Pop a great rabbit picture by color! ![A great rabbit](https://rabbit.org/graphics/fun/netbunnies/jellybean1-brennan1.jpg)\n",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Mr. Rabbit",
                "description": "Pink rabbit"
              }
            }
          },
          "required": false
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/works": {
      "get": {
        "operationId": "api_works_get_collection",
        "tags": ["Works"],
        "responses": {
          "200": {
            "description": "Works collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Works.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Works"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Works"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Works resources.",
        "description": "Retrieves the collection of Works resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_works_post",
        "tags": ["Works"],
        "responses": {
          "201": {
            "description": "Works resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Works.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Works"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Works"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Works resource.",
        "description": "Creates a Works resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Works resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Works.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Works"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Works"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/works/{id}": {
      "get": {
        "operationId": "api_works_id_get",
        "tags": ["Works"],
        "responses": {
          "200": {
            "description": "Works resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Works.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Works"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Works"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Works resource.",
        "description": "Retrieves a Works resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Works identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_works_id_put",
        "tags": ["Works"],
        "responses": {
          "200": {
            "description": "Works resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Works.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Works"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Works"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Works resource.",
        "description": "Replaces the Works resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Works identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Works resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Works.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Works"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Works"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_works_id_delete",
        "tags": ["Works"],
        "responses": {
          "204": {
            "description": "Works resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Works resource.",
        "description": "Removes the Works resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Works identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_works_id_patch",
        "tags": ["Works"],
        "responses": {
          "200": {
            "description": "Works resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Works.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Works"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Works"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Works resource.",
        "description": "Updates the Works resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Works identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Works resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Works"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/login": {
      "ref": "JWT Token",
      "post": {
        "operationId": "postCredentialsItem",
        "tags": ["Token"],
        "responses": {
          "200": {
            "description": "Get JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        },
        "summary": "Get JWT token to login.",
        "requestBody": {
          "description": "Generate new JWT Token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          },
          "required": false
        },
        "security": []
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Diseases": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Diseases.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Medias": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Medias.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Movies": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "Release_Date": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "Title": {
            "type": "string"
          },
          "Popularity": {
            "type": "integer"
          },
          "Vote_Count": {
            "readOnly": true,
            "type": "integer"
          },
          "Vote_Average": {
            "readOnly": true,
            "type": "integer"
          },
          "Original_Language": {
            "readOnly": true,
            "type": "string"
          },
          "Genre": {
            "type": "string"
          },
          "Poster_Url": {
            "readOnly": true,
            "type": "string"
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "popularity": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "voteAverage": {
            "type": "integer"
          },
          "originalLanguage": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "posterUrl": {
            "type": "string"
          }
        }
      },
      "Movies.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "Release_Date": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "Title": {
            "type": "string"
          },
          "Popularity": {
            "type": "integer"
          },
          "Vote_Count": {
            "readOnly": true,
            "type": "integer"
          },
          "Vote_Average": {
            "readOnly": true,
            "type": "integer"
          },
          "Original_Language": {
            "readOnly": true,
            "type": "string"
          },
          "Genre": {
            "type": "string"
          },
          "Poster_Url": {
            "readOnly": true,
            "type": "string"
          },
          "overview": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "popularity": {
            "type": "string"
          },
          "voteCount": {
            "type": "integer"
          },
          "voteAverage": {
            "type": "integer"
          },
          "originalLanguage": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "posterUrl": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "password": {
            "description": "The hashed password",
            "type": "string"
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "activation_token": {
            "readOnly": true,
            "type": "string"
          },
          "isActivate": {
            "type": "boolean",
            "nullable": true
          },
          "userIdentifier": {
            "readOnly": true,
            "description": "A visual identifier that represents this user.",
            "type": "string"
          },
          "activationToken": {
            "type": "string"
          }
        }
      },
      "User.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "password": {
            "description": "The hashed password",
            "type": "string"
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "activation_token": {
            "readOnly": true,
            "type": "string"
          },
          "isActivate": {
            "type": "boolean",
            "nullable": true
          },
          "userIdentifier": {
            "readOnly": true,
            "description": "A visual identifier that represents this user.",
            "type": "string"
          },
          "activationToken": {
            "type": "string"
          }
        }
      },
      "Works": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "skills": {
            "type": "string"
          }
        }
      },
      "Works.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "skills": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Credentials": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "example": "apassword"
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "description": "Value for the Authorization header parameter.",
        "name": "Authorization",
        "in": "header"
      },
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "tags": []
}
